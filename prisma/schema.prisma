// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum SectorType {
  DIGIZIGN
  ZURELABS
  INTERNZITY
  UNIZEEK
}

enum Priority {
  HIGH
  MEDIUM
  LOW
}

enum Status {
  PENDING
  IN_PROGRESS
  COMPLETED
  CANCELLED
}

model User {
  id                String   @id
  name              String
  email             String   @unique
  password          String
  sector            SectorType
  isEmailVerified   Boolean  @default(false)
  emailToken        String?  // for email verification
  emailTokenExpiry  DateTime?
  resetToken        String?   // for password resets
  resetTokenExpiry  DateTime?
  isAdmin           Boolean  @default(false)

  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt

  tasks             Task[]
}

model Lead {

  id       String   @id 
  name              String
  email             String   @unique
  phone             String
  sector            SectorType
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt

  tasks             Task[]
}

model Task {
  id                String   @id
  title             String
  description       String
  priority          Priority
  status            Status   @default(PENDING)
  dueDate           DateTime?
  
  user              User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId            String
  lead              Lead     @relation(fields: [leadId], references: [id], onDelete: Cascade)
  leadId            String
  
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
}

model ZureClient {
  id          String   @id @default(uuid())
  name        String
  email       String   @unique
  phone       String?
  isActive    Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  projects    ZureProject[]
  proposals   ZureProposal[]
}

model ZureProject {
  id          String   @id @default(uuid())
  title       String
  description String?
  client      ZureClient @relation(fields: [clientId], references: [id])
  clientId    String
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

enum ProposalStatus {
  SENT
  PENDING
  ACCEPTED
  PAID
  REJECTED
}

model ZureProposal {
  id          String         @id @default(uuid())
  title       String
  description String?
  amount      Float
  proposalstatus      ProposalStatus
  client      ZureClient     @relation(fields: [clientId], references: [id])
  clientId    String
  createdAt   DateTime       @default(now())
  updatedAt   DateTime       @updatedAt
}
